name: Test Extended MF6
description: Build and test Extended MODFLOW 6
runs:
  using: "composite"
  steps:
    - name: Setup GNU Fortran
      uses: fortran-lang/setup-fortran@v1
      with:
        compiler: gcc
        version: 13

    - name: Checkout PETSc
      if: runner.os == 'Linux'
      uses: actions/checkout@v4
      with:
        repository: petsc/petsc
        path: petsc
        ref: release

    - name: Checkout PETSc
      if: runner.os == 'macOS'
      uses: actions/checkout@v4
      with:
        repository: petsc/petsc
        path: petsc
        ref: v3.22.1

    - name: Configure environment
      shell: bash
      run: |
        echo "PKG_CONFIG_PATH=$GITHUB_WORKSPACE/petsc/arch-gcc-opt/lib/pkgconfig" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/petsc/arch-gcc-opt/bin" >> $GITHUB_PATH

    - name: Configure PETSc
      shell: bash
      working-directory: petsc
      run: |
        sudo wget -P $GITHUB_WORKSPACE/petsc https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-5.0.2.tar.gz
        sudo ./configure PETSC_ARCH=arch-gcc-opt --download-fblaslapack --download-openmpi=$GITHUB_WORKSPACE/petsc/openmpi-5.0.2.tar.gz --with-debugging=0
        sudo make all

    - name: Install netcdf
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install build-essential \
          libnetcdf-dev \
          libnetcdff-dev \
          netcdf-bin
        nc-config --all
        nf-config --all

    - name: Install netcdf
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install netcdf-fortran
        nc-config --all
        nf-config

    - name: Build modflow6
      shell: bash
      working-directory: modflow6
      run: |
        pixi run setup -Dextended=true builddir
        pixi run build builddir
        pixi run test builddir

    - name: Show Meson logs
      if: failure()
      shell: bash
      working-directory: modflow6
      run: cat builddir/meson-logs/meson-log.txt

    - name: Update flopy
      shell: bash
      working-directory: modflow6
      run: pixi run update-flopy

    - name: Get executables
      shell: bash
      working-directory: modflow6
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: pixi run get-exes

    - name: Test programs (macOS)
      if: runner.os == 'macOS'
      shell: bash
      working-directory: modflow6
      env:
        REPOS_PATH: ${{ github.workspace }}
      run: |
        otool -L bin/libmf6.dylib
        echo $DYLD_LIBRARY_PATH 
        pixi run autotest --parallel --netcdf -k "test_par or test_netcdf"

    - name: Test programs (Linux)
      if: runner.os != 'macOS'
      shell: bash
      working-directory: modflow6
      env:
        REPOS_PATH: ${{ github.workspace }}
      run: |
        ldd bin/libmf6.so
        echo $LD_LIBRARY_PATH
        pixi run autotest --parallel --netcdf -k "test_par or test_netcdf"
